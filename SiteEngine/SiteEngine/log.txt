Executed DbCommand (31ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT u."Id", u."Email", u."Name", u."Password", u."PhoneNumber"
FROM dbo."User" AS uExecuted DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT u."Id", u."Birthday", u."DateCreatedAt", u."DateDelete", u."DateUpdatedAt", u."FirstName", u."IsActived", u."LastName", u."MiddleName", u."UserId"
FROM dbo."UserProfile" AS uExecuted DbCommand (35ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT u."Id", u."Email", u."Name", u."Password", u."PhoneNumber"
FROM dbo."User" AS uExecuted DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT u."Id", u."Birthday", u."DateCreatedAt", u."DateDelete", u."DateUpdatedAt", u."FirstName", u."IsActived", u."LastName", u."MiddleName", u."UserId"
FROM dbo."UserProfile" AS uExecuted DbCommand (32ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )Executed DbCommand (27ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)Executed DbCommand (11ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";Applying migration '20241013212201_tabbles'.Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM pg_namespace WHERE nspname = 'dbo') THEN
        CREATE SCHEMA dbo;
    END IF;
END $EF$;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM pg_namespace WHERE nspname = 'meta') THEN
        CREATE SCHEMA meta;
    END IF;
END $EF$;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM pg_namespace WHERE nspname = 'dict') THEN
        CREATE SCHEMA dict;
    END IF;
END $EF$;Failed executing DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE meta."OrderPriority" (
    "OrderPriorityId" text NOT NULL,
    "Description" text,
    CONSTRAINT "PK_OrderPriority" PRIMARY KEY ("OrderPriorityId")
);Executed DbCommand (27ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";Applying migration '20241013212201_tabbles'.Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM pg_namespace WHERE nspname = 'dbo') THEN
        CREATE SCHEMA dbo;
    END IF;
END $EF$;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM pg_namespace WHERE nspname = 'meta') THEN
        CREATE SCHEMA meta;
    END IF;
END $EF$;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM pg_namespace WHERE nspname = 'dict') THEN
        CREATE SCHEMA dict;
    END IF;
END $EF$;Failed executing DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE meta."OrderPriority" (
    "OrderPriorityId" text NOT NULL,
    "Description" text,
    CONSTRAINT "PK_OrderPriority" PRIMARY KEY ("OrderPriorityId")
);Executed DbCommand (27ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";Applying migration '20241013212201_tabbles'.Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20241013212201_tabbles', '8.0.10');Applying migration '20241014225342_table_token'.Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE dbo."Token" (
    "Guid" uuid NOT NULL,
    "UserId" integer NOT NULL,
    "DateCreate" timestamp with time zone NOT NULL,
    "DateExpired" timestamp with time zone NOT NULL,
    CONSTRAINT "PK_Token" PRIMARY KEY ("Guid"),
    CONSTRAINT "FK_Token_User_UserId" FOREIGN KEY ("UserId") REFERENCES dbo."User" ("Id") ON DELETE CASCADE
);Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Token_UserId" ON dbo."Token" ("UserId");Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20241014225342_table_token', '8.0.10');Executed DbCommand (33ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )Executed DbCommand (10ms) [Parameters=[@__user_name_0='?'], CommandType='Text', CommandTimeout='30']
SELECT u."Id", u."Email", u."Name", u."Password", u."PhoneNumber"
FROM dbo."User" AS u
WHERE u."Name" = @__user_name_0
LIMIT 2Executed DbCommand (1ms) [Parameters=[@__user_email_0='?'], CommandType='Text', CommandTimeout='30']
SELECT u."Id", u."Email", u."Name", u."Password", u."PhoneNumber"
FROM dbo."User" AS u
WHERE u."Email" = @__user_email_0
LIMIT 2Executed DbCommand (0ms) [Parameters=[@__user_phoneNumber_0='?'], CommandType='Text', CommandTimeout='30']
SELECT u."Id", u."Email", u."Name", u."Password", u."PhoneNumber"
FROM dbo."User" AS u
WHERE u."PhoneNumber" = @__user_phoneNumber_0
LIMIT 2Executed DbCommand (2ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?'], CommandType='Text', CommandTimeout='30']
INSERT INTO dbo."User" ("Email", "Name", "Password", "PhoneNumber")
VALUES (@p0, @p1, @p2, @p3)
RETURNING "Id";Executed DbCommand (31ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )Executed DbCommand (9ms) [Parameters=[@__user_name_0='?'], CommandType='Text', CommandTimeout='30']
SELECT u."Id", u."Email", u."Name", u."Password", u."PhoneNumber"
FROM dbo."User" AS u
WHERE u."Name" = @__user_name_0
LIMIT 2Executed DbCommand (1ms) [Parameters=[@__user_email_0='?'], CommandType='Text', CommandTimeout='30']
SELECT u."Id", u."Email", u."Name", u."Password", u."PhoneNumber"
FROM dbo."User" AS u
WHERE u."Email" = @__user_email_0
LIMIT 2Executed DbCommand (0ms) [Parameters=[@__user_phoneNumber_0='?'], CommandType='Text', CommandTimeout='30']
SELECT u."Id", u."Email", u."Name", u."Password", u."PhoneNumber"
FROM dbo."User" AS u
WHERE u."PhoneNumber" = @__user_phoneNumber_0
LIMIT 2Executed DbCommand (1ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?'], CommandType='Text', CommandTimeout='30']
INSERT INTO dbo."User" ("Email", "Name", "Password", "PhoneNumber")
VALUES (@p0, @p1, @p2, @p3)
RETURNING "Id";Executed DbCommand (32ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )Executed DbCommand (9ms) [Parameters=[@__user_name_0='?'], CommandType='Text', CommandTimeout='30']
SELECT u."Id", u."Email", u."Name", u."Password", u."PhoneNumber"
FROM dbo."User" AS u
WHERE u."Name" = @__user_name_0
LIMIT 2Executed DbCommand (1ms) [Parameters=[@__user_email_0='?'], CommandType='Text', CommandTimeout='30']
SELECT u."Id", u."Email", u."Name", u."Password", u."PhoneNumber"
FROM dbo."User" AS u
WHERE u."Email" = @__user_email_0
LIMIT 2Executed DbCommand (1ms) [Parameters=[@__user_phoneNumber_0='?'], CommandType='Text', CommandTimeout='30']
SELECT u."Id", u."Email", u."Name", u."Password", u."PhoneNumber"
FROM dbo."User" AS u
WHERE u."PhoneNumber" = @__user_phoneNumber_0
LIMIT 2Executed DbCommand (2ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?'], CommandType='Text', CommandTimeout='30']
INSERT INTO dbo."User" ("Email", "Name", "Password", "PhoneNumber")
VALUES (@p0, @p1, @p2, @p3)
RETURNING "Id";Executed DbCommand (31ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )Executed DbCommand (10ms) [Parameters=[@__user_name_0='?'], CommandType='Text', CommandTimeout='30']
SELECT u."Id", u."Email", u."Name", u."Password", u."PhoneNumber"
FROM dbo."User" AS u
WHERE u."Name" = @__user_name_0
LIMIT 2Executed DbCommand (1ms) [Parameters=[@__user_email_0='?'], CommandType='Text', CommandTimeout='30']
SELECT u."Id", u."Email", u."Name", u."Password", u."PhoneNumber"
FROM dbo."User" AS u
WHERE u."Email" = @__user_email_0
LIMIT 2Executed DbCommand (1ms) [Parameters=[@__user_phoneNumber_0='?'], CommandType='Text', CommandTimeout='30']
SELECT u."Id", u."Email", u."Name", u."Password", u."PhoneNumber"
FROM dbo."User" AS u
WHERE u."PhoneNumber" = @__user_phoneNumber_0
LIMIT 2Executed DbCommand (3ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?'], CommandType='Text', CommandTimeout='30']
INSERT INTO dbo."User" ("Email", "Name", "Password", "PhoneNumber")
VALUES (@p0, @p1, @p2, @p3)
RETURNING "Id";Executed DbCommand (32ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )Executed DbCommand (11ms) [Parameters=[@__user_name_0='?'], CommandType='Text', CommandTimeout='30']
SELECT u."Id", u."Email", u."Name", u."Password", u."PhoneNumber"
FROM dbo."User" AS u
WHERE u."Name" = @__user_name_0
LIMIT 2Executed DbCommand (1ms) [Parameters=[@__user_email_0='?'], CommandType='Text', CommandTimeout='30']
SELECT u."Id", u."Email", u."Name", u."Password", u."PhoneNumber"
FROM dbo."User" AS u
WHERE u."Email" = @__user_email_0
LIMIT 2Executed DbCommand (1ms) [Parameters=[@__user_phoneNumber_0='?'], CommandType='Text', CommandTimeout='30']
SELECT u."Id", u."Email", u."Name", u."Password", u."PhoneNumber"
FROM dbo."User" AS u
WHERE u."PhoneNumber" = @__user_phoneNumber_0
LIMIT 2Executed DbCommand (3ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?'], CommandType='Text', CommandTimeout='30']
INSERT INTO dbo."User" ("Email", "Name", "Password", "PhoneNumber")
VALUES (@p0, @p1, @p2, @p3)
RETURNING "Id";Executed DbCommand (0ms) [Parameters=[@__user_name_0='?'], CommandType='Text', CommandTimeout='30']
SELECT u."Id", u."Email", u."Name", u."Password", u."PhoneNumber"
FROM dbo."User" AS u
WHERE u."Name" = @__user_name_0
LIMIT 2Executed DbCommand (31ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )Executed DbCommand (10ms) [Parameters=[@__user_name_0='?'], CommandType='Text', CommandTimeout='30']
SELECT u."Id", u."Email", u."Name", u."Password", u."PhoneNumber"
FROM dbo."User" AS u
WHERE u."Name" = @__user_name_0
LIMIT 2Executed DbCommand (1ms) [Parameters=[@__user_email_0='?'], CommandType='Text', CommandTimeout='30']
SELECT u."Id", u."Email", u."Name", u."Password", u."PhoneNumber"
FROM dbo."User" AS u
WHERE u."Email" = @__user_email_0
LIMIT 2Executed DbCommand (1ms) [Parameters=[@__user_phoneNumber_0='?'], CommandType='Text', CommandTimeout='30']
SELECT u."Id", u."Email", u."Name", u."Password", u."PhoneNumber"
FROM dbo."User" AS u
WHERE u."PhoneNumber" = @__user_phoneNumber_0
LIMIT 2Executed DbCommand (1ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?'], CommandType='Text', CommandTimeout='30']
INSERT INTO dbo."User" ("Email", "Name", "Password", "PhoneNumber")
VALUES (@p0, @p1, @p2, @p3)
RETURNING "Id";Executed DbCommand (1ms) [Parameters=[@__user_name_0='?'], CommandType='Text', CommandTimeout='30']
SELECT u."Id", u."Email", u."Name", u."Password", u."PhoneNumber"
FROM dbo."User" AS u
WHERE u."Name" = @__user_name_0
LIMIT 2Executed DbCommand (31ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )Executed DbCommand (9ms) [Parameters=[@__user_name_0='?'], CommandType='Text', CommandTimeout='30']
SELECT u."Id", u."Email", u."Name", u."Password", u."PhoneNumber"
FROM dbo."User" AS u
WHERE u."Name" = @__user_name_0
LIMIT 2Executed DbCommand (1ms) [Parameters=[@__user_email_0='?'], CommandType='Text', CommandTimeout='30']
SELECT u."Id", u."Email", u."Name", u."Password", u."PhoneNumber"
FROM dbo."User" AS u
WHERE u."Email" = @__user_email_0
LIMIT 2Executed DbCommand (0ms) [Parameters=[@__user_phoneNumber_0='?'], CommandType='Text', CommandTimeout='30']
SELECT u."Id", u."Email", u."Name", u."Password", u."PhoneNumber"
FROM dbo."User" AS u
WHERE u."PhoneNumber" = @__user_phoneNumber_0
LIMIT 2Executed DbCommand (3ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?'], CommandType='Text', CommandTimeout='30']
INSERT INTO dbo."User" ("Email", "Name", "Password", "PhoneNumber")
VALUES (@p0, @p1, @p2, @p3)
RETURNING "Id";Executed DbCommand (1ms) [Parameters=[@__user_name_0='?'], CommandType='Text', CommandTimeout='30']
SELECT u."Id", u."Email", u."Name", u."Password", u."PhoneNumber"
FROM dbo."User" AS u
WHERE u."Name" = @__user_name_0
LIMIT 2Executed DbCommand (10ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
INSERT INTO dbo."UserRole" ("RoleId", "UserId")
VALUES (@p0, @p1)
RETURNING "Id";Executed DbCommand (32ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )Executed DbCommand (10ms) [Parameters=[@__user_name_0='?'], CommandType='Text', CommandTimeout='30']
SELECT u."Id", u."Email", u."Name", u."Password", u."PhoneNumber"
FROM dbo."User" AS u
WHERE u."Name" = @__user_name_0
LIMIT 2Executed DbCommand (1ms) [Parameters=[@__user_email_0='?'], CommandType='Text', CommandTimeout='30']
SELECT u."Id", u."Email", u."Name", u."Password", u."PhoneNumber"
FROM dbo."User" AS u
WHERE u."Email" = @__user_email_0
LIMIT 2Executed DbCommand (0ms) [Parameters=[@__user_phoneNumber_0='?'], CommandType='Text', CommandTimeout='30']
SELECT u."Id", u."Email", u."Name", u."Password", u."PhoneNumber"
FROM dbo."User" AS u
WHERE u."PhoneNumber" = @__user_phoneNumber_0
LIMIT 2Executed DbCommand (1ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?'], CommandType='Text', CommandTimeout='30']
INSERT INTO dbo."User" ("Email", "Name", "Password", "PhoneNumber")
VALUES (@p0, @p1, @p2, @p3)
RETURNING "Id";Executed DbCommand (0ms) [Parameters=[@__user_name_0='?'], CommandType='Text', CommandTimeout='30']
SELECT u."Id", u."Email", u."Name", u."Password", u."PhoneNumber"
FROM dbo."User" AS u
WHERE u."Name" = @__user_name_0
LIMIT 2Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
INSERT INTO dbo."UserRole" ("RoleId", "UserId")
VALUES (@p0, @p1)
RETURNING "Id";Executed DbCommand (37ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )Executed DbCommand (11ms) [Parameters=[@__user_name_0='?'], CommandType='Text', CommandTimeout='30']
SELECT u."Id", u."Email", u."Name", u."Password", u."PhoneNumber"
FROM dbo."User" AS u
WHERE u."Name" = @__user_name_0
LIMIT 2Executed DbCommand (1ms) [Parameters=[@__user_email_0='?'], CommandType='Text', CommandTimeout='30']
SELECT u."Id", u."Email", u."Name", u."Password", u."PhoneNumber"
FROM dbo."User" AS u
WHERE u."Email" = @__user_email_0
LIMIT 2Executed DbCommand (0ms) [Parameters=[@__user_phoneNumber_0='?'], CommandType='Text', CommandTimeout='30']
SELECT u."Id", u."Email", u."Name", u."Password", u."PhoneNumber"
FROM dbo."User" AS u
WHERE u."PhoneNumber" = @__user_phoneNumber_0
LIMIT 2Executed DbCommand (3ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?'], CommandType='Text', CommandTimeout='30']
INSERT INTO dbo."User" ("Email", "Name", "Password", "PhoneNumber")
VALUES (@p0, @p1, @p2, @p3)
RETURNING "Id";Executed DbCommand (1ms) [Parameters=[@__user_name_0='?'], CommandType='Text', CommandTimeout='30']
SELECT u."Id", u."Email", u."Name", u."Password", u."PhoneNumber"
FROM dbo."User" AS u
WHERE u."Name" = @__user_name_0
LIMIT 2Executed DbCommand (6ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
INSERT INTO dbo."UserRole" ("RoleId", "UserId")
VALUES (@p0, @p1)
RETURNING "Id";Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )Executed DbCommand (1ms) [Parameters=[@__user_name_0='?'], CommandType='Text', CommandTimeout='30']
SELECT u."Id", u."Email", u."Name", u."Password", u."PhoneNumber"
FROM dbo."User" AS u
WHERE u."Name" = @__user_name_0
LIMIT 2Executed DbCommand (1ms) [Parameters=[@__user_email_0='?'], CommandType='Text', CommandTimeout='30']
SELECT u."Id", u."Email", u."Name", u."Password", u."PhoneNumber"
FROM dbo."User" AS u
WHERE u."Email" = @__user_email_0
LIMIT 2Executed DbCommand (0ms) [Parameters=[@__user_phoneNumber_0='?'], CommandType='Text', CommandTimeout='30']
SELECT u."Id", u."Email", u."Name", u."Password", u."PhoneNumber"
FROM dbo."User" AS u
WHERE u."PhoneNumber" = @__user_phoneNumber_0
LIMIT 2Executed DbCommand (2ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?'], CommandType='Text', CommandTimeout='30']
INSERT INTO dbo."User" ("Email", "Name", "Password", "PhoneNumber")
VALUES (@p0, @p1, @p2, @p3)
RETURNING "Id";Executed DbCommand (1ms) [Parameters=[@__user_name_0='?'], CommandType='Text', CommandTimeout='30']
SELECT u."Id", u."Email", u."Name", u."Password", u."PhoneNumber"
FROM dbo."User" AS u
WHERE u."Name" = @__user_name_0
LIMIT 2Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
INSERT INTO dbo."UserRole" ("RoleId", "UserId")
VALUES (@p0, @p1)
RETURNING "Id";Executed DbCommand (33ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )Executed DbCommand (10ms) [Parameters=[@__user_name_0='?'], CommandType='Text', CommandTimeout='30']
SELECT u."Id", u."Email", u."Name", u."Password", u."PhoneNumber"
FROM dbo."User" AS u
WHERE u."Name" = @__user_name_0
LIMIT 2Executed DbCommand (1ms) [Parameters=[@__user_email_0='?'], CommandType='Text', CommandTimeout='30']
SELECT u."Id", u."Email", u."Name", u."Password", u."PhoneNumber"
FROM dbo."User" AS u
WHERE u."Email" = @__user_email_0
LIMIT 2Executed DbCommand (1ms) [Parameters=[@__user_phoneNumber_0='?'], CommandType='Text', CommandTimeout='30']
SELECT u."Id", u."Email", u."Name", u."Password", u."PhoneNumber"
FROM dbo."User" AS u
WHERE u."PhoneNumber" = @__user_phoneNumber_0
LIMIT 2Executed DbCommand (31ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )Executed DbCommand (9ms) [Parameters=[@__user_name_0='?'], CommandType='Text', CommandTimeout='30']
SELECT u."Id", u."Email", u."Name", u."Password", u."PhoneNumber"
FROM dbo."User" AS u
WHERE u."Name" = @__user_name_0
LIMIT 2Executed DbCommand (2ms) [Parameters=[@__user_email_0='?'], CommandType='Text', CommandTimeout='30']
SELECT u."Id", u."Email", u."Name", u."Password", u."PhoneNumber"
FROM dbo."User" AS u
WHERE u."Email" = @__user_email_0
LIMIT 2Executed DbCommand (1ms) [Parameters=[@__user_phoneNumber_0='?'], CommandType='Text', CommandTimeout='30']
SELECT u."Id", u."Email", u."Name", u."Password", u."PhoneNumber"
FROM dbo."User" AS u
WHERE u."PhoneNumber" = @__user_phoneNumber_0
LIMIT 2Executed DbCommand (3ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?'], CommandType='Text', CommandTimeout='30']
INSERT INTO dbo."User" ("Email", "Name", "Password", "PhoneNumber")
VALUES (@p0, @p1, @p2, @p3)
RETURNING "Id";Executed DbCommand (1ms) [Parameters=[@__user_name_0='?'], CommandType='Text', CommandTimeout='30']
SELECT u."Id", u."Email", u."Name", u."Password", u."PhoneNumber"
FROM dbo."User" AS u
WHERE u."Name" = @__user_name_0
LIMIT 2Executed DbCommand (10ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
INSERT INTO dbo."UserRole" ("RoleId", "UserId")
VALUES (@p0, @p1)
RETURNING "Id";Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )Executed DbCommand (1ms) [Parameters=[@__user_email_0='?'], CommandType='Text', CommandTimeout='30']
SELECT u."Id", u."Email", u."Name", u."Password", u."PhoneNumber"
FROM dbo."User" AS u
WHERE u."Email" = @__user_email_0
LIMIT 2Executed DbCommand (33ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )Executed DbCommand (12ms) [Parameters=[@__user_email_0='?'], CommandType='Text', CommandTimeout='30']
SELECT u."Id", u."Email", u."Name", u."Password", u."PhoneNumber"
FROM dbo."User" AS u
WHERE u."Email" = @__user_email_0
LIMIT 2Executed DbCommand (31ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )Executed DbCommand (10ms) [Parameters=[@__user_email_0='?'], CommandType='Text', CommandTimeout='30']
SELECT u."Id", u."Email", u."Name", u."Password", u."PhoneNumber"
FROM dbo."User" AS u
WHERE u."Email" = @__user_email_0
LIMIT 2Executed DbCommand (31ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )Executed DbCommand (10ms) [Parameters=[@__user_email_0='?'], CommandType='Text', CommandTimeout='30']
SELECT u."Id", u."Email", u."Name", u."Password", u."PhoneNumber"
FROM dbo."User" AS u
WHERE u."Email" = @__user_email_0
LIMIT 2Executed DbCommand (31ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )Executed DbCommand (10ms) [Parameters=[@__user_email_0='?'], CommandType='Text', CommandTimeout='30']
SELECT u."Id", u."Email", u."Name", u."Password", u."PhoneNumber"
FROM dbo."User" AS u
WHERE u."Email" = @__user_email_0
LIMIT 2Executed DbCommand (31ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )Executed DbCommand (9ms) [Parameters=[@__user_email_0='?'], CommandType='Text', CommandTimeout='30']
SELECT u."Id", u."Email", u."Name", u."Password", u."PhoneNumber"
FROM dbo."User" AS u
WHERE u."Email" = @__user_email_0
LIMIT 2Failed executing DbCommand (4ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime), @p2='?' (DbType = DateTime), @p3='?', @p4='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
INSERT INTO dbo."Token" ("Guid", "DateCreate", "DateExpired", "TokenValue", "UserId")
VALUES (@p0, @p1, @p2, @p3, @p4);An exception occurred in the database while saving changes for context type 'DatabaseContext.AppDbContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> System.ArgumentException: Cannot write DateTime with Kind=Local to PostgreSQL type 'timestamp with time zone', only UTC is supported. Note that it's not possible to mix DateTimes with different Kinds in an array, range, or multirange. (Parameter 'value')
   at Npgsql.Internal.Converters.DateTimeConverterResolver`1.Get(DateTime value, Nullable`1 expectedPgTypeId, Boolean validateOnly)
   at Npgsql.Internal.Converters.DateTimeConverterResolver.<>c.<CreateResolver>b__0_0(DateTimeConverterResolver`1 resolver, DateTime value, Nullable`1 expectedPgTypeId)
   at Npgsql.Internal.Converters.DateTimeConverterResolver`1.Get(T value, Nullable`1 expectedPgTypeId)
   at Npgsql.Internal.PgConverterResolver`1.GetAsObjectInternal(PgTypeInfo typeInfo, Object value, Nullable`1 expectedPgTypeId)
   at Npgsql.Internal.PgResolverTypeInfo.GetResolutionAsObject(Object value, Nullable`1 expectedPgTypeId)
   at Npgsql.Internal.PgTypeInfo.GetObjectResolution(Object value)
   at Npgsql.NpgsqlParameter.ResolveConverter(PgTypeInfo typeInfo)
   at Npgsql.NpgsqlParameter.ResolveTypeInfo(PgSerializerOptions options)
   at Npgsql.NpgsqlParameterCollection.ProcessParameters(PgSerializerOptions options, Boolean validateValues, CommandType commandType)
   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)Executed DbCommand (33ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )Executed DbCommand (11ms) [Parameters=[@__user_email_0='?'], CommandType='Text', CommandTimeout='30']
SELECT u."Id", u."Email", u."Name", u."Password", u."PhoneNumber"
FROM dbo."User" AS u
WHERE u."Email" = @__user_email_0
LIMIT 2Failed executing DbCommand (8ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime), @p2='?' (DbType = DateTime), @p3='?', @p4='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
INSERT INTO dbo."Token" ("Guid", "DateCreate", "DateExpired", "TokenValue", "UserId")
VALUES (@p0, @p1, @p2, @p3, @p4);An exception occurred in the database while saving changes for context type 'DatabaseContext.AppDbContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Npgsql.PostgresException (0x80004005): 42703: столбец "TokenValue" в таблице "Token" не существует

POSITION: 63
   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
  Exception data:
    Severity: ОШИБКА
    SqlState: 42703
    MessageText: столбец "TokenValue" в таблице "Token" не существует
    Position: 63
    File: parse_target.c
    Line: 1070
    Routine: checkInsertTargets
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)Executed DbCommand (27ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )Executed DbCommand (27ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )Executed DbCommand (27ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1 FROM pg_catalog.pg_class c
    JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace
    WHERE n.nspname='public' AND
          c.relname='__EFMigrationsHistory'
)Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";Applying migration '20241025215140_addColumnToTokenTable'.Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE dbo."Token" DROP CONSTRAINT "FK_Token_User_UserId";Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE dbo."Token" ADD "TokenValue" text NOT NULL DEFAULT '';Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE dbo."UserProfile" SET "DateCreatedAt" = TIMESTAMPTZ '2024-10-25T21:51:39.85375Z', "DateUpdatedAt" = TIMESTAMPTZ '2024-10-25T21:51:39.85375Z'
WHERE "Id" = 1;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
UPDATE dbo."UserProfile" SET "DateCreatedAt" = TIMESTAMPTZ '2024-10-25T21:51:39.85375Z', "DateUpdatedAt" = TIMESTAMPTZ '2024-10-25T21:51:39.85375Z'
WHERE "Id" = 2;Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
ALTER TABLE dbo."Token" ADD CONSTRAINT "FK_Token_User_UserId" FOREIGN KEY ("UserId") REFERENCES dbo."User" ("Id") ON DELETE RESTRICT;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20241025215140_addColumnToTokenTable', '8.0.10');Executed DbCommand (31ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )Executed DbCommand (10ms) [Parameters=[@__user_email_0='?'], CommandType='Text', CommandTimeout='30']
SELECT u."Id", u."Email", u."Name", u."Password", u."PhoneNumber"
FROM dbo."User" AS u
WHERE u."Email" = @__user_email_0
LIMIT 2Executed DbCommand (7ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime), @p2='?' (DbType = DateTime), @p3='?', @p4='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
INSERT INTO dbo."Token" ("Guid", "DateCreate", "DateExpired", "TokenValue", "UserId")
VALUES (@p0, @p1, @p2, @p3, @p4);Executed DbCommand (27ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )Executed DbCommand (8ms) [Parameters=[@__user_email_0='?'], CommandType='Text', CommandTimeout='30']
SELECT u."Id", u."Email", u."Name", u."Password", u."PhoneNumber"
FROM dbo."User" AS u
WHERE u."Email" = @__user_email_0
LIMIT 2Failed executing DbCommand (7ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime), @p2='?' (DbType = DateTime), @p3='?', @p4='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
INSERT INTO dbo."Token" ("Guid", "DateCreate", "DateExpired", "TokenValue", "UserId")
VALUES (@p0, @p1, @p2, @p3, @p4);An exception occurred in the database while saving changes for context type 'DatabaseContext.AppDbContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Npgsql.PostgresException (0x80004005): 23505: повторяющееся значение ключа нарушает ограничение уникальности "IX_Token_UserId"

DETAIL: Detail redacted as it may contain sensitive data. Specify 'Include Error Detail' in the connection string to include this information.
   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
  Exception data:
    Severity: ОШИБКА
    SqlState: 23505
    MessageText: повторяющееся значение ключа нарушает ограничение уникальности "IX_Token_UserId"
    Detail: Detail redacted as it may contain sensitive data. Specify 'Include Error Detail' in the connection string to include this information.
    SchemaName: dbo
    TableName: Token
    ConstraintName: IX_Token_UserId
    File: nbtinsert.c
    Line: 673
    Routine: _bt_check_unique
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)Executed DbCommand (27ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE WHEN COUNT(*) = 0 THEN FALSE ELSE TRUE END
FROM pg_class AS cls
JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
WHERE
        cls.relkind IN ('r', 'v', 'm', 'f', 'p') AND
        ns.nspname NOT IN ('pg_catalog', 'information_schema') AND
        -- Exclude tables which are members of PG extensions
        NOT EXISTS (
            SELECT 1 FROM pg_depend WHERE
                classid=(
                    SELECT cls.oid
                    FROM pg_class AS cls
                             JOIN pg_namespace AS ns ON ns.oid = cls.relnamespace
                    WHERE relname='pg_class' AND ns.nspname='pg_catalog'
                ) AND
                objid=cls.oid AND
                deptype IN ('e', 'x')
        )Executed DbCommand (8ms) [Parameters=[@__user_email_0='?'], CommandType='Text', CommandTimeout='30']
SELECT u."Id", u."Email", u."Name", u."Password", u."PhoneNumber"
FROM dbo."User" AS u
WHERE u."Email" = @__user_email_0
LIMIT 2Failed executing DbCommand (7ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime), @p2='?' (DbType = DateTime), @p3='?', @p4='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
INSERT INTO dbo."Token" ("Guid", "DateCreate", "DateExpired", "TokenValue", "UserId")
VALUES (@p0, @p1, @p2, @p3, @p4);An exception occurred in the database while saving changes for context type 'DatabaseContext.AppDbContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Npgsql.PostgresException (0x80004005): 23505: повторяющееся значение ключа нарушает ограничение уникальности "IX_Token_UserId"

DETAIL: Detail redacted as it may contain sensitive data. Specify 'Include Error Detail' in the connection string to include this information.
   at Npgsql.Internal.NpgsqlConnector.ReadMessageLong(Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(Boolean async, CommandBehavior behavior, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
  Exception data:
    Severity: ОШИБКА
    SqlState: 23505
    MessageText: повторяющееся значение ключа нарушает ограничение уникальности "IX_Token_UserId"
    Detail: Detail redacted as it may contain sensitive data. Specify 'Include Error Detail' in the connection string to include this information.
    SchemaName: dbo
    TableName: Token
    ConstraintName: IX_Token_UserId
    File: nbtinsert.c
    Line: 673
    Routine: _bt_check_unique
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)